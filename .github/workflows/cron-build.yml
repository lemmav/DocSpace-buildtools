name: 4testing multiarch-build


on:
  repository_dispatch:
    types:
      - trigger-action
# on:
#   workflow_dispatch:
#   # schedule:
#     # - cron: '*/15 * * * *'
#     # - cron: '0 0 * * 0'
env:
  DOCKER_PATH: "/install/docker"
  REPO: "lemmav"
  DOCKER_IMAGE_PREFIX: "4testing-docspace"
  DOCKERFILE: "Dockerfile.app"


jobs:

  select-branches:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: List Branches
        id: list-branches
        run: |
          all_branches=$( git ls-remote -hq | sed -n 's/^[0-9a-f]\{40\}\s\+refs\/heads\//''/p')
          matching_branches=""
          for branch in $all_branches; do
            if [[ $branch =~ ^release/v[0-9]+ || $branch =~ ^hotfix/v[0-9]+ || $branch == "develop" ]]; then
              matching_branches="${matching_branches},\"${branch}\""
            fi
          done
          
          matching_branches=${matching_branches#,}
          echo "all_branches=${all_branches}"
          echo "matching_branches=[${matching_branches}]"
          echo "json_output=[${matching_branches}]" >> $GITHUB_OUTPUT
    outputs:
      selected-branches: ${{ steps.list-branches.outputs.json_output }}


  build:
    needs: select-branches
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [linux/amd64]
        branch: ${{ fromJson(needs.select-branches.outputs.selected-branches) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Free Disk Space
        run: |
          sudo rm -rf /usr/local/lib/android /opt/ghc
          sudo docker image prune --all --force

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build 4testing
        run: |
          cd .${DOCKER_PATH}
          if [ "${{ matrix.branch }}" = "develop" ]; then
            DOCKER_TAG="develop.${{ github.run_number }}"
          else
            DOCKER_TAG=$(echo "${{ matrix.branch }}" | sed '/^release\b\|^hotfix\b\|^feature\b/s/release.*\/\|hotfix.*\/\|feature.*\///; s/-git-action$//; s/^v//').${{github.run_number}}          
          fi
          export DOCKER_TAG
          docker buildx bake -f build.yml \
          --set *.args.GIT_BRANCH=${{ matrix.branch }} \
          --set *.platform=linux/amd64 \
          --push
        shell: bash
